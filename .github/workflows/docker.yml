name: Django CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.17.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Build and run with Docker Compose
      run: |
        docker-compose build
        docker-compose up -d
      env:
        DJANGO_DB_HOST: ${{ secrets.DJANGO_DB_HOST }}
        DJANGO_DB_USER: ${{ secrets.DJANGO_DB_USER }}
        DJANGO_DB_PASSWORD: ${{ secrets.DJANGO_DB_PASSWORD }}
        DJANGO_DB_NAME: ${{ secrets.DJANGO_DB_NAME }}
        DJANGO_DB_PORT: ${{ secrets.DJANGO_DB_PORT }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

    - name: Verify Containers are running
      run: docker-compose ps

    - name: Wait for database to be ready
      run: |
        docker-compose run server python -c "
        import sys
        import psycopg2
        import time
        for _ in range(30):
            try:
                psycopg2.connect(
                    dbname='${{ secrets.DJANGO_DB_NAME }}',
                    user='${{ secrets.DJANGO_DB_USER }}',
                    password='${{ secrets.DJANGO_DB_PASSWORD }}',
                    host='${{ secrets.DJANGO_DB_HOST }}',
                    port='${{ secrets.DJANGO_DB_PORT }}'
                )
                sys.exit(0)
            except psycopg2.OperationalError:
                time.sleep(1)
        sys.exit(1)
        "

    - name: Run migrations
      run: docker-compose run server python manage.py migrate

    - name: Run tests
      run: docker-compose run server python manage.py test